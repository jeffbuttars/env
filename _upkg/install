#!/bin/bash

THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REPO_TOP=$(readlink -f "$THIS_DIR/..")
SRC_DIR="$REPO_TOP/src"
DOTF_DIR="$SRC_DIR/dotfiles"
BIN_DIR="$SRC_DIR/bin"
CUSTOM_DIR="$SRC_DIR/custom"

source "$THIS_DIR/upkg.sh"

safe_link()
{
    from=$1
    to=$2

    bname=$(dirname $to)
    mkdir -p $bname

    if [[ -f $to ]]; then
        if [[ ! -L $to ]]; then
            mv -v -f --backup=numbered $to "${to}.bak"
        fi
    elif [[ -d $to ]]; then
        if [[ ! -L $to ]]; then
            mv -v -f --backup=numbered $to "${to}.bak"
        fi
    fi

    ln -vnsf "$from" "$to"
} #safe_link

# install our dotfiles by backing up existing files and linking in our own.
pr_info "Updating dotfiles."
for df in $(ls -1 "$DOTF_DIR/") ; do
    dest="$HOME/.${df}"
    safe_link "$DOTF_DIR/$df" "$dest"
done

# install our bin files by backing up existing files and linking in our own.
pr_info "Updating ~/bin files"
for df in $(ls -1 "$BIN_DIR/") ; do
    dest="$HOME/bin/${df}"
    safe_link "$BIN_DIR/$df" "$dest"
done

# Setup vimpager if it's installed
vimpagerdir="$PKGS_PKG_DIR/vimpager" 
if [[ -d $vimpagerdir ]]; then
    pr_info "installing vimpager"
    cd $vimpagerdir

    install -v -D -m 755 vimpager $HOME/bin/vimpager
    install -v -D -m 755 vimcat $HOME/bin/vimcat
    if [[ ! -f $HOME/.vimpagerrc ]]; then
        install -v -D -m 644 vimpagerrc $HOME/.vimpagerrc
    fi
else
    pr_info "didn't find vimpager pager installation at $vimpagerdir"
fi

echo "Do the solarized dance"
soldir="$PKGS_PKG_DIR/kde-colors-solarized.git" 
if [[ -d "$soldir" ]]; then
    pr_info "installing solarized"
    cd $soldir 
    bash ./install.sh
    cd -

	cp -f "$SRC_DIR/xresources" ~/.Xresources
	xrdb -merge ~/.Xresources
fi

echo "Update i3 config"
~/.i3/genconfig.sh

# Install the Myi3 desktop file...
sudo install --verbose -D --mode=644 ${CUSTOM_DIR}/myi3.desktop /usr/share/xsessions/myi3.desktop
sudo install --verbose -D --mode=755 ${BIN_DIR}/initi3 /usr/local/bin/initi3

# Install the 'pure' command prompt for zsh
pr_info "Installing pure prompt..."
if [[ -d pure ]]; then
    cd pure
    git pull
    cd -
else
    git clone https://github.com/sindresorhus/pure pure
fi
mkdir -p "$HOME/.zfunctions"
ln -nsf "$PWD/pure/pure.zsh" "$HOME/.zfunctions/prompt_pure_setup"
ln -nsf "$PWD/pure/async.zsh" "$HOME/.zfunctions/async"

pr_pass "Run the command 'chsh -s /bin/zsh' to change the default shell to zsh."
