
# If we're in a tty and fbterm-bi is available, use it.

tty | grep 'tty'
if [[ "$?" == "0" ]]
then
    if [[ -x /usr/bin/fbterm ]]
    then
        if [[ -x "$HOME/bin/fbterm-bi" ]]
        then
            $HOME/bin/fbterm-bi
        fi
    fi
fi

# source autojump befor oh-my
if [[ -f /etc/profile.d/autojump.zsh ]]; then
    source /etc/profile.d/autojump.zsh
fi

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.upkg/oh-my-zsh.git

# # Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
# ZSH_THEME="gentoo"

# Default to a white shell if not set otherwise.
if [[ -z $TERM_META ]]
then
    export TERM_META=white
fi

fpath=( "$HOME/.zfunctions" $fpath )

# if [[ $TERM_META == 'white' ]]
# then
#     ZSH_THEME="kphoen"
#     # ZSH_THEME="philips"
# elif [[ $TERM_META == 'blue' ]]
# then
#     # ZSH_THEME="af-magic"
#     ZSH_THEME="gentoo"
# else
#     ZSH_THEME='robbyrussell'
#     # ZSH_THEME='blinks'
# fi
ZSH_THEME='philips'

# echo "Theme: $ZSH_THEME"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Use the pure prompt
autoload -U promptinit && promptinit
prompt pure


# Set vi mode
bindkey -v

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

function zle-line-init zle-keymap-select {
    VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
    zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select
# By default, there is a 0.4 second delay after you hit the <ESC> key and when
# the mode change is registered. This results in a very jarring and frustrating
# transition between modes. Let's reduce this delay to 0.1 seconds.
export KEYTIMEOUT=1


KEYLIST=(id_rsa id_dsa id_dsa_uceemapi)

if [[ -x /usr/bin/ksshaskpass ]]
    export SSH_ASKPASS=/usr/bin/ksshaskpass
then

fi
if [[ -x /usr/bin/keychain ]]
then
   eval `keychain --eval --agents ssh --inherit any $KEYLIST`
fi

# PATH alterations
export PATH="$HOME/bin:$HOME/.upkg/env.git/src/bin:$PATH"

# If we have a source installation of neovim, prefer it
if [[ -f /opt/neovim/bin/nvim ]]; then
    export PATH="$PATH:/opt/neovim/bin"
fi

if [[ -f /opt/vagrant ]]
then
    PATH=$PATH:/opt/vagrant/bin # Add Vagrant to PATH for scripting
fi
export PATH=$PATH:/usr/local/stata12
export PATH=$PATH:/home/jeff/.gem/ruby/2.1.0/bin
export PATH=$PATH:/usr/lib/qt4/bin

export bacos="$HOME/Dev/A10/acos/bacos/target/sources/sto/apps/axgui"

# Turn off spelling correction
unsetopt correct
unsetopt correctall

# Aliases
vims=('nvim' 'gvim -v' 'vim' 'vi')

# Select which vim to use in order of preference. First found wins.
for var in $vims
do
    echo "Trying $var"
    v=$(which $var 2>&1 > /dev/null)
    if [[ "0" == "$?" ]]
    then
        echo "Using $var"
        alias vim="$var"
        alias vi="$var"
        alias svi="sudo -E $var"
        alias vis="$var -O"
        if [[ "$var" == "nvim"` ]]
        then
            alias vimdiff="$var -O"
        fi
        break
    fi
done

# alias yum='sudo yum'
alias pcm='~/.upkg/pcm/pcm.sh'
# alias dnf='sudo dnf'
alias gs='git status'

HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=10000000

# CD whitout typing cd
AUTO_CD="true"

alias -s html=google-chrome

# default grep options.
# Ignore .svn directories
# Ignore .cvs directories
# Ignore tags files 
alias grep="grep --exclude='*.git*' --exclude='*.hg*' --exclude='*.svn*' --exclude='*.cvs*' --exclude='*\.pyo' --exclude='*\.pyc' --exclude='*~' --exclude=TAGS --exclude=tags"

# Enable virtualcandy
VC_AUTO_ACTIVATION='true'
source $HOME/.upkg/virtualcandy.git/src/virtualcandy.zsh

# My convenience envs.

export DJANGO_DEBUG='yes'

export DONTDATECHK=y

export MARKPATH=$HOME/.marks
function jump { 
    cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function mark { 
    mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function unmark { 
    rm -i "$MARKPATH/$1"
}
function marks {
    ls -l "$MARKPATH" | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
}

# Try to acativate a virtualenv if we're in one.
vcactivate 2>&1 > /dev/null

# Look for $HOME/.zsh_local
# That's where you put computer specific things that don't go in the repo
if [[ -f $HOME/.zsh_local ]]; then
    source $HOME/.zsh_local
fi

if [[ -x /usr/bin/nyancat ]]
then
    nyancat --frame 10
fi

# vim:set ft=zsh:
