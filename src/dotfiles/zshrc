
# Enable profiling
# zmodload zsh/zprof

function source_if_exists()
{
    if [[ -f "$1" ]]
    then
        # echo "Sourcing $1"
        source "$1"
    fi
}

# Load the more ZSH Specific seettings first
fpath+=~/.zfunc

# Only compinit some times
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

setopt COMPLETE_ALIASES
zstyle ':completion::complete:*' gain-privileges 1

# Set vi mode
bindkey -v

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

# zle -N zle-line-init
# zle -N zle-keymap-select

# By default, there is a 0.4 second delay after you hit the <ESC> key and when
# the mode change is registered. This results in a very jarring and frustrating
# transition between modes. Let's reduce this delay to 0.1 seconds.
export KEYTIMEOUT=0.1
export VIRTUAL_ENV_PREV=""

# Turn off spelling correction
unsetopt correct
unsetopt correctall

HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
# setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
# setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# # CD without typing cd
# AUTO_CD="true"

# https://github.com/zsh-users/zsh-autosuggestions
#export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
source_if_exists "${HOME}/.local/share/zsh-autosuggestions/zsh-autosuggestions.zsh"

source_if_exists "${HOME}/.local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

bindkey '^ ' autosuggest-accept

# Look for $HOME/.zsh_local
# That's where you put computer specific things that don't go in the repo
source_if_exists "$HOME/.zsh_local"

# Source the rest of our config
source_if_exists "$HOME/.shell.d/index"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# print out profiling info
# zprof

function enable_termium()
{
  if command -v termium > /dev/null 2>&1; then
    eval "$(termium shell-hook show post)"
  fi
} #enable_termium

# ### Added by Codeium. These lines cannot be automatically removed if modified
# if command -v termium > /dev/null 2>&1; then
#   eval "$(termium shell-hook show post)"
# fi
# ### End of Codeium integration

