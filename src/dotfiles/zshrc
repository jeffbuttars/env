
# source autojump befor oh-my
if [[ -f /etc/profile.d/autojump.zsh ]]; then
    source /etc/profile.d/autojump.zsh
fi

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.upkg/oh-my-zsh.git

# # Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
# ZSH_THEME="gentoo"

# Default to a white shell if not set otherwise.
if [[ -z $TERM_META ]]
then
    export TERM_META=white
fi

# if [[ $TERM_META == 'white' ]]
# then
#     ZSH_THEME="kphoen"
#     # ZSH_THEME="philips"
# elif [[ $TERM_META == 'blue' ]]
# then
#     # ZSH_THEME="af-magic"
#     ZSH_THEME="gentoo"
# else
#     ZSH_THEME='robbyrussell'
#     # ZSH_THEME='blinks'
# fi
ZSH_THEME='philips'

# echo "Theme: $ZSH_THEME"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh


if [[ -x /usr/bin/keychain ]]
then
   # keychain --eval --agents ssh -Q --quiet ~/.ssh/id_rsa  ~/.ssh/id_dsa_uceemapi
   eval `keychain --eval id_rsa id_dsa_uceemapi`
fi

# PATH alterations
export PATH="$HOME/bin:$HOME/.upkg/env.git/src/bin:$PATH"

if [[ -f /opt/vagrant ]]
then
    PATH=$PATH:/opt/vagrant/bin # Add Vagrant to PATH for scripting
fi
export PATH=$PATH:/usr/local/stata12
export PATH=$PATH:/home/jeff/.gem/ruby/2.0.0/bin

# Turn off spelling correction
unsetopt correct
unsetopt correctall

# Aliases
alias svi='sudo vim'
alias vis='vim -O'
alias yum='sudo yum'
alias pcm='sudo pcm'
alias dnf='sudo dnf'

HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=10000000

# Set vi mode
bindkey -v
bindkey '^R' history-incremental-pattern-search-backward

# CD whitout typing cd
AUTO_CD="true"

alias -s html=google-chrome

# default grep options.
# Ignore .svn directories
# Ignore .cvs directories
# Ignore tags files 
export GREP_OPTIONS='--exclude=*.git* --exclude=*.hg* --exclude=*.svn* --exclude=*.cvs* --exclude=*\.pyo --exclude=*\.pyc --exclude=*~ --exclude=TAGS --exclude=tags'

# If we have a source installation of vim, prefer it
if [[ -f /usr/local/bin/vim ]]; then
    VIMPATH=/usr/local/bin
fi

# Enable virtualcandy
VC_AUTO_ACTIVATION='true'
source $HOME/.upkg/virtualcandy.git/src/virtualcandy.zsh

# My convenience envs.

# My local nphase prod clone
# user: root, password: winadmin
export UCEEM_LOCAL_PROD=192.168.15.16

export DJANGO_DEBUG='yes'

# source /opt/bcm/bcm_47xx/bcmenv.sh

g=$(which gvim)
if [[ "0" == "$?" ]]
then
    alias vim='gvim -v'
    alias vi='gvim -v'
fi


export DONTDATECHK=y
export BCM_DEV_BOARD_IP='192.168.210.1'
export BCM_COMMON_SRC="$HOME/Development/uceem/bcm_common"
export BCM_DEV_BOARD_USER=admin
export BCM_DEV_BOARD_PASS=password
export BCM_REPO_BASE="$HOME/Development/uceem"
export BCM_TEST_BUILD_DIR="$HOME/Development/uceem/tmp/bcmtestbuild"
export BCM_TEST_BUILD_REPOS_NAMES="uceem_ng_mbr1210_bcm4718_gpl \
    uceem_ng_mbr1515_bcm4718_gpl \
    bcm_47XX_uceem uceem_ng_wnr3500_bcm4718_gpl"


# function _activate_bcmenv()
# {
#     if [[ "$PWD"=~"^$BCM_DEV_PREFIX*"  ]]; then
#     fi
    
# } #_activate_bcmenv

# if [[ -n $BCM_DEV_PREFIX ]]; then
#     chpwd_functions=(${chpwd_functions[@]} "_activate_bcmenv")
#     # We want to run it now in case the terminal was started
#     # with CWD in a virtuanenv directory
#     _activate_bcmenv
# fi

export MARKPATH=$HOME/.marks
function jump { 
    cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function mark { 
    mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function unmark { 
    rm -i "$MARKPATH/$1"
}
function marks {
    ls -l "$MARKPATH" | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
}

export PIP_DOWNLOAD_CACHE=/tmp/pipcache

source ~/pkgs/.pkgs.zsh

# Try to acativate a virtualenv if we're in one.
vcactivate 2>&1 > /dev/null


# vim:set ft=zsh:
