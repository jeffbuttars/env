
umask 0027

# Localize the global nodejs installs
export NPM_PACKAGES="$HOME/.npm-packages"

export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"

if [[ ! -d "$NPM_PACKAGES" ]]; then
    mkdir -p "$NPM_PACKAGES"
fi

# export VC_VENV_INITIAL_DEV_PKGS="neovim flake8 prospector pylint"
export VC_VENV_INITIAL_DEV_PKGS="neovim flake8 jedi black isort"

# PATH alterations
export PATH="$HOME/bin:$HOME/.upkg/env.git/src/bin:$PATH:$NPM_PACKAGES/bin"

if [[ -d "${HOME}/.local/bin" ]]; then
    export PATH="${HOME}/.local/bin:$PATH"
fi

# MANPATH
export MANPATH="$(manpath):$NPM_PACKAGES/share/man"

mkdir -p $HOME/.nvm
export NVM_DIR=$HOME/.nvm
[ -f $NVM_DIR/nvm.sh ] && source $NVM_DIR/nvm.sh

# NVM
if [[ -f /usr/share/nvm/init-nvm.sh  ]]; then
    source /usr/share/nvm/init-nvm.sh
fi

# if [[ -f /opt/vagrant ]]
# then
#     export PATH="$PATH:/opt/vagrant/bin" # Add Vagrant to PATH for scripting
# fi

if [[ -d  "$HOME/.rvm/bin" ]]; then
    export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
fi

if [[ /opt/android-sdk ]]; then
    export ANDROID_HOME='/opt/android-sdk'
    export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
fi

# SSH Keychain
if [[ -x /usr/bin/ksshaskpass ]]
then
    export SSH_ASKPASS=/usr/bin/ksshaskpass
fi

if [[ -x /usr/bin/keychain ]]
then
   eval $(keychain --quiet --eval --agents ssh --inherit any id_rsa id_dsa)
fi

if [[ "$HOME/.pythonrc.py" ]]; then
    export PYTHONSTARTUP="$HOME/.pythonrc.py"
fi

# Aliases
vims=('nvim' 'gvim -v' 'vim' 'vi')

# Select which vim to use in order of preference. First found wins.
for var in $vims
do
    v=$(which $var 2>&1 > /dev/null)
    if [[ "0" == "$?" ]]
    then
        alias v="$var"
        alias vi="$var"
        alias vim="$var"
        alias svi="sudo -E $var"
        alias vis="$var -O"
        break
    fi
done

# default grep options
# Ignore VCS directories
# Ignore tags files 
# Ignore binary files
alias grep="grep -I \
    --exclude-dir='.git'\
    --exclude-dir='.hg'\
    --exclude-dir='.svn'\
    --exclude-dir='.cvs'\
    --exclude-dir='node_modules'\
    --exclude='*\.pyo'\
    --exclude='*\.pyc'\
    --exclude='*~'\
    --exclude=TAGS\
    --exclude=tags"

if [ -f ~/.upkg/pcm/pcm.sh ]; then
    alias pcm='~/.upkg/pcm/pcm.sh'
fi
alias gst='git status'
alias gsp='git status -uno'
alias gp='git push'
alias gpl='git pull'
alias gplt='git pullt'
alias greup='git reup'
alias gcm='git cim'
alias ga='git add'
alias jobs='jobs -l'
alias less=$PAGER
alias ll="ls  --group-directories-first --color=auto -l -t -h "
alias ls="ls -h --color=auto --group-directories-first"
alias open='xdg-open'
alias vif='nvim +Files'
alias icat='kitty +kitten icat'

# Use some of that ripgrep if it's around

v=$(which rg 2>&1 > /dev/null)
if [[ "0" == "$?" ]]; then
    export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
fi

# Initialize fasd
eval "$(fasd --init auto)"

# like normal z when used with arguments but displays an fzf prompt when used without.
unalias z 2> /dev/null
z() {
    [ $# -gt 0 ] && fasd_cd -d "$*" && return
  cd "$(fasd_cd -d 2>&1 | fzf-tmux +s --tac --query "$*" | sed 's/^[0-9,.]* *//')"
}

# Default to a white shell if not set otherwise.
if [[ -z $TERM_META ]]
then
    export TERM_META=light
fi

export PSQL_EDITOR='vim -c"set ft=sql"'
export BROWSER=google-chrome
export EDITOR='vim'

if [[ -f $HOME/Dev/BST/defense-os/scripts/serve-completion.bash ]]; then
    . $HOME/Dev/BST/defense-os/scripts/serve-completion.bash
fi

if [[ -f $HOME/.Xmodmap ]] && [[ $DISPLAY ]]; then
    xmodmap $HOME/.Xmodmap
fi

export NEOVIDE_MULTIGRID=true


# vim:set ft=sh:
