#!/bin/sh
#
# Check if a Plasma session already is running and whether it's possible to connect to X
kcheckrunning
kcheckrunning_result=$?
if test $kcheckrunning_result -eq 0 ; then
	echo "Plasma seems to be already running on this display."
	xmessage -geometry 500x100 "Plasma seems to be already running on this display." > /dev/null 2>/dev/null
	exit 1
elif test $kcheckrunning_result -eq 2 ; then
	echo "\$DISPLAY is not set or cannot connect to the X server."
        exit 1
fi

# finally, give the session control to the session manager
# see kdebase/ksmserver for the description of the rest of the startup sequence
# if the KDEWM environment variable has been set, then it will be used as KDE's
# window manager instead of kwin.
# if KDEWM is not set, ksmserver will ensure kwin is started.
# kwrapper5 is used to reduce startup time and memory usage
# kwrapper5 does not return useful error codes such as the exit code of ksmserver.
# We only check for 255 which means that the ksmserver process could not be
# started, any problems thereafter, e.g. ksmserver failing to initialize,
# will remain undetected.
export KDEWM='i3'
#test -n "$KDEWM" && KDEWM="--windowmanager $KDEWM"

# Start the ssh-agent
[ -n "$SSH_AGENT_PID" ] || eval "$(ssh-agent -s)"

/usr/bin/startplasma-x11

# Stop the ssh-agent
[ -z "$SSH_AGENT_PID" ] || eval "$(ssh-agent -k)"
