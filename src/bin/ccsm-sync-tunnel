#!/bin/bash

# PIDFILE='/tmp/ccsmsynctunnels.pid'

# if [[ "$1" == "stop" ]]; then
#     kill $(cat $PIDFILE)
#     exit
# fi

# trap ctrl_c INT

# function ctrl_c() {
#     echo "Killing tunnel pids: $(cat $PIDFILE)"
#     kill $(cat $PIDFILE)
# }

SSH_USER=jeff
# PUBLIC_HOST=jeffbuttars.com
PUBLIC_HOST='192.81.128.23'

HTTPS_PORT_REMOTE=8443
HTTPS_PORT_LOCAL=1337

HTTP_PORT_REMOTE=8442
# HTTP_PORT_LOCAL=1336
HTTP_PORT_LOCAL=8000
# REMOTE_TCP_PORT=9090


# sudo iptables -t nat -A PREROUTING -s 127.0.0.1 -p tcp --dport ${HTTPS_PORT_REMOTE} -j REDIRECT --to 8181
# sudo iptables -t nat -A OUTPUT -s 127.0.0.1 -p tcp --dport ${HTTPS_PORT_REMOTE} -j REDIRECT --to 8181

# sudo iptables -v -t nat -A PREROUTING -s 127.0.0.1 -p tcp --dport ${HTTP_PORT_LOCAL} -j REDIRECT --to 8000
# sudo iptables -v -t nat -A OUTPUT -s 127.0.0.1 -p tcp --dport ${HTTP_PORT_LOCAL} -j REDIRECT --to 8000

cmd="ssh -v -v -v ${SSH_USER}@${PUBLIC_HOST} -N -R ${PUBLIC_HOST}:${HTTP_PORT_REMOTE}:127.0.0.1:${HTTP_PORT_LOCAL}"
echo "Starting HTTP tunnel: $cmd"
$cmd


# echo "Starting HTTP tunnel: ${PUBLIC_HOST}:${HTTPS_PORT_REMOTE} -> localhost:${HTTPS_PORT_LOCAL}"
# ssh -v -N -R ${HTTPS_PORT_REMOTE}:localhost:${HTTPS_PORT_LOCAL} ${SSH_USER}@${PUBLIC_HOST}

# ssh_http_pid=$!
# echo -en $ssh_http_pid > $PIDFILE

# wait
# nc -l -p $REMOTE_TCP_PORT
