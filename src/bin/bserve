#!/bin/bash

BASE_DIR="$HOME/Dev/BST/defense-os"
cd "$BASE_DIR"
WORK_DIR="$BASE_DIR"

shellexec ()
{
    tmpfile=$(mktemp)
    echo -e "set +e\ntrap 'echo \"Dead now!\"' SIGINT SIGTERM\n$1\nzsh -i" > "$tmpfile"
    konsole --profile red --workdir $WORK_DIR -e "zsh $tmpfile" &
    sleep 1
}

# pgsql     #  API
# dbwatch   #  COP
# couchdb   #  Node

i3-msg 'workspace " 10 ï„ˆ Dev Services"'

i3-msg 'focus parent'
i3-msg 'split vertical'

# WORK_DIR="$BASE_DIR/services/pgsql"
# cd $WORK_DIR
# shellexec "./dev-serve"

# WORK_DIR="$BASE_DIR/services/dbwatch"
# cd $WORK_DIR
# shellexec "./dev-serve --debug"

# docker volume create couchdb
# mkdir -p $HOME/tmp/couchdb
# WORK_DIR="$BASE_DIR/"
# cd $WORK_DIR
# shellexec "docker run --rm --network host --name bst-couchdb -e COUCHDB_USER=bst -e COUCHDB_PASSWORD=bst --mount type=volume,source=couchdb,target=/opt/couchdb/data couchdb:2.2"

WORK_DIR="$BASE_DIR"
cd $WORK_DIR
shellexec "./scripts/serve couchdb"

WORK_DIR="$BASE_DIR"
cd $WORK_DIR
shellexec "./scripts/serve pgsql dbwatch"

i3-msg 'focus parent'
i3-msg 'split horizontal'

WORK_DIR="$BASE_DIR"
cd $WORK_DIR
shellexec "echo 'Cleaning and starting API dev server'; ./scripts/serve api"

i3-msg 'split vertical'

WORK_DIR="$BASE_DIR/cop"
cd $WORK_DIR
#shellexec "echo 'Starting COP...'; yarn yrebuild; yarn start"
shellexec "echo 'Starting COP...'; yarn yrebuild; yarn start"

WORK_DIR="$BASE_DIR"
cd $WORK_DIR
#shellexec "echo 'Starting V1 services...'; . /usr/share/nvm/init-nvm.sh; nvm use bst; npm i; ./node_modules/.bin/nf start -j Procfile.jeff"
shellexec "echo 'Starting V1 services...'; . /usr/share/nvm/init-nvm.sh; nvm use bst; ./node_modules/.bin/nf start -j Procfile.jeff"

# i3-msg 'split vertical'

# WORK_DIR="$BASE_DIR/services/sims/simdar"
# cd $WORK_DIR
# konsole --profile red --workdir $WORK_DIR
