#!/bin/bash

set -e

MERGE_MASTER=false

if [[ "$1" = "-m" ]]; then
    MERGE_MASTER=true
fi

ORIG_BRANCH=$(git rev-parse --abbrev-ref HEAD)

DIRTY=$(git status -uno --porcelain)
if [[ -n $DIRTY ]]; then
    # Stash if needed
    echo "REUP: $ORIG_BRANCH is dirty, stashing changes..."
    git stash save "Stashed by reup $$"
    echo "REUP: stashed"
fi

# If not on branch master, stash and change to branch master
if [[ "$ORIG_BRANCH" != "master" ]]; then
    echo "REUP: current branch is $ORIG_BRANCH"
    echo "REUP: checking out master..."
    git checkout master
fi

echo "REUP: rebasing from upstream..."
git pull --rebase upstream master

# push update to origin master
echo "REUP: Push updated master to origin"
git push origin master

# Change back to branch if necessary and pop the stash if stashed.
if [[ "$ORIG_BRANCH" != "master" ]]; then
    echo "REUP: Returning to branch $ORIG_BRANCH"
    git co "$ORIG_BRANCH"
    if [[ -n $DIRTY ]]; then
        echo "REUP: restoring from stash..."
        git stash pop
    fi

    # If -m was given as an option, merge master back to the branch
    if [[ "$MERGE_MASTER" = "true" ]]; then
        echo "REUP: Merge back from master..."
        git merge master
    fi
fi
